#!/bin/bash -x

# Assumes we have already installed Python successfully, and
# installs additional python pacakges

export PYENV_ROOT="$HOME/.pyenv" && \
export PATH="$PYENV_ROOT/bin:$PATH" && \
export PYENV_VERSION=${PYTHON_VERSION}

# Load the Python env into the shell
eval "$(pyenv init -)"
eval "$(pyenv init --path)"
pyenv shell ${PYTHON_VERSION}
if [ $? -ne 0 ]; then
  exit 1
fi

echo $1 | tr ',' '\n' | while read packages; do
  echo "Installing packages: ${packages}"
  install_package=$packages

  pip install ${install_package}  --trusted-host pypi.org --trusted-host files.pythonhosted.org

  # Prepare the build directories
  cd /
  mkdir -p build/bin
  mkdir -p build/lib
  cp -r $PYENV_ROOT build/pyenv
  cd build/bin
  ln -s ../pyenv/versions/${PYTHON_VERSION}/bin/python python
  ln -s ../pyenv/versions/${PYTHON_VERSION}/bin/pip pip

  # Validate packages have been installed
  for package in "${install_package}"; do
    pip show ${package} || (>&2 echo "Failed to find package"; exit 1)
    if [ $? -ne 0 ]; then
      exit 1
    fi
  done

  # Create the build package
  export ARCH=`uname -m`

  mkdir -p /build/bin && mkdir -p /build/lib

  /copy-libs

  install_package_no_space=`echo ${install_package} | sed 's/ /_/g'`

  export SENSU_ASSET="/assets/sensu-python-runtime_${ASSET_VERSION}_python-${PYTHON_VERSION}_with_${install_package_no_space}-${PLATFORM}_$(uname -s | tr '[:upper:]' '[:lower:]')_${ARCH}.tar.gz"
  tar -czf $SENSU_ASSET -C /build/ . && cd / && rm -rf /build

  # Tidy up ready for the next package
  cd /
  pip uninstall -y ${install_package}

done
